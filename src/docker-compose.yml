services:
  roller_tutorial:
    image: roller_tutorial
    container_name: "roller_tutorial"
    env_file:
      - env
    build:
      context: .
      dockerfile: Roller.Tutorial/Dockerfile
    networks:
      - tutorial_net
    depends_on:
      - postgresql
      - seq
      - redis
  postgresql:
    container_name: "roller_postgresql"
    image: "postgres"
    restart: unless-stopped
    ports:
      - "${POSTGRESQL_PORT}:5432"
    networks:
      - "tutorial_net"
    environment:
      TZ: "GMT+8"
      PGTZ: "GMT+8"
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_USER: ${POSTGRESQL_USER}
  redis:
    networks:
      - "library_services_net"
    restart: unless-stopped
    container_name: "roller_redis"
    image: "redis"
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    
  seq:
    image: datalust/seq:latest
    container_name: "roller_seq"
    restart: unless-stopped
    environment:
      - ACCEPT_EULA = Y
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH = ${SEQ_ADMINPASSWORD}
    ports:
      - "5341:80"
    networks:
      - tutorial_net
  seqcli:
    image: datalust/seqcli:latest
    container_name: "roller_seqcli"
    command: apikey create -t newapikey --token ${SEQ_APIKEY} -s ${SEQ_URL}
    depends_on:
      - seq
    restart: on-failure:5
    networks:
      - library_services_net
networks:
  tutorial_net:
    driver: bridge    